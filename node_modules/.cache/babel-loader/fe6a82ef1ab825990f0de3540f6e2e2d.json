{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ekinoks\\\\React\\\\my-app\\\\src\\\\Auth.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\"\n// export default function (props) {\n//   let [authMode, setAuthMode] = useState(\"signin\");\n//   const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n//   // User Login info\n//   const database = [\n//     {\n//       username: \"user1@user1\",\n//       password: \"pass1\"\n//     },\n//     {\n//       username: \"user2@user2\",\n//       password: \"pass2\"\n//     }\n//   ];\n//   const errors = {\n//     uname: \"invalid username\",\n//     pass: \"invalid password\"\n//   };\n//   const renderErrorMessages = (name) => {\n//     name === errorMessages.name && (\n//       <div className=\"error\">{errorMessages.message}</div>\n//     );\n//   }\n//   const handleSubmit = (event) => {\n//     debugger;\n//     //Prevent page reload\n//     event.preventDefault();\n//     var { uname, pass } = document.forms[0];\n//     // Find user login info\n//     const userData = database.find((user) => user.username === uname.value);\n//     // Compare user info\n//     if (userData) {\n//       if (userData.password !== pass.value) {\n//         // Invalid password\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\n//       } else {\n//         setIsSubmitted(true);\n//       }\n//     } else {\n//       // Username not found\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\n//     }\n//   };\n//   const changeAuthMode = () => {\n//     setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\")\n//   }\n//   if (authMode === \"signin\") {\n//     return (\n//       <div className=\"Auth-form-container\">\n//         <form className=\"Auth-form\">\n//           <div className=\"Auth-form-content\">\n//             <h3 className=\"Auth-form-title\">Sign In</h3>\n//             <div className=\"text-center\">\n//               Not registered yet?{\" \"}\n//               <span className=\"link-primary\" onClick={changeAuthMode}>\n//                 Sign Up\n//               </span>\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Email</label>\n//               <input\n//                 type=\"email\"\n//                 className=\"form-control mt-1\"\n//                 placeholder=\"Enter email\"\n//               //{...renderErrorMessages(\"Email\")}\n//               />\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Password</label>\n//               <input\n//                 type=\"password\"\n//                 className=\"form-control mt-1\"\n//                 placeholder=\"Enter password\"\n//               //{...renderErrorMessages(\"Password\")}\n//               />\n//             </div>\n//             <div className=\"d-grid gap-2 mt-3\">\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 <form onSubmit={handleSubmit}>Submit</form>\n//               </button>\n//             </div>\n//             {/* <p className=\"text-center mt-2\">\n//               Forgot <a href=\"#\">password?</a>\n//             </p> */}\n//           </div>\n//         </form>\n//       </div>\n//     )\n//   }\n//   return (\n//     <div className=\"Auth-form-container\">\n//       <form className=\"Auth-form\">\n//         <div className=\"Auth-form-content\">\n//           <h3 className=\"Auth-form-title\">Sign In</h3>\n//           <div className=\"text-center\">\n//             Already registered?{\" \"}\n//             <span className=\"link-primary\" onClick={changeAuthMode}>\n//               Sign In\n//             </span>\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Name</label>\n//             <input\n//               type=\"name\"\n//               className=\"form-control mt-1\"\n//               placeholder=\"Full Name\"\n//             />\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Email</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control mt-1\"\n//               placeholder=\"Email Address\"\n//             />\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control mt-1\"\n//               placeholder=\"Password\"\n//             />\n//           </div>\n//           <div className=\"d-grid gap-2 mt-3\">\n//             <button type=\"submit\" className=\"btn btn-primary\">\n//               <form onSubmit={handleSubmit}>Submit</form>\n//             </button>\n//           </div>\n//           {/* <p className=\"text-center mt-2\">\n//             Forgot <a href=\"#\">password?</a>\n//           </p> */}\n//         </div>\n//       </form>\n//     </div>\n//   )\n// }\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false); // User Login info\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.find(user => user.username === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        span: \"12\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 24\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","App","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"sources":["C:/Ekinoks/React/my-app/src/Auth.js"],"sourcesContent":["// import React, { useState } from \"react\"\r\n\r\n// export default function (props) {\r\n\r\n//   let [authMode, setAuthMode] = useState(\"signin\");\r\n//   const [errorMessages, setErrorMessages] = useState({});\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n\r\n//   // User Login info\r\n//   const database = [\r\n//     {\r\n//       username: \"user1@user1\",\r\n//       password: \"pass1\"\r\n//     },\r\n//     {\r\n//       username: \"user2@user2\",\r\n//       password: \"pass2\"\r\n//     }\r\n//   ];\r\n\r\n//   const errors = {\r\n//     uname: \"invalid username\",\r\n//     pass: \"invalid password\"\r\n//   };\r\n\r\n//   const renderErrorMessages = (name) => {\r\n//     name === errorMessages.name && (\r\n//       <div className=\"error\">{errorMessages.message}</div>\r\n//     );\r\n//   }\r\n\r\n//   const handleSubmit = (event) => {\r\n//     debugger;\r\n//     //Prevent page reload\r\n//     event.preventDefault();\r\n\r\n//     var { uname, pass } = document.forms[0];\r\n\r\n//     // Find user login info\r\n//     const userData = database.find((user) => user.username === uname.value);\r\n\r\n//     // Compare user info\r\n//     if (userData) {\r\n//       if (userData.password !== pass.value) {\r\n//         // Invalid password\r\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\r\n//       } else {\r\n//         setIsSubmitted(true);\r\n//       }\r\n//     } else {\r\n//       // Username not found\r\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\r\n//     }\r\n//   };\r\n\r\n\r\n//   const changeAuthMode = () => {\r\n//     setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\")\r\n//   }\r\n\r\n\r\n//   if (authMode === \"signin\") {\r\n//     return (\r\n//       <div className=\"Auth-form-container\">\r\n//         <form className=\"Auth-form\">\r\n//           <div className=\"Auth-form-content\">\r\n//             <h3 className=\"Auth-form-title\">Sign In</h3>\r\n//             <div className=\"text-center\">\r\n//               Not registered yet?{\" \"}\r\n//               <span className=\"link-primary\" onClick={changeAuthMode}>\r\n//                 Sign Up\r\n//               </span>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 className=\"form-control mt-1\"\r\n//                 placeholder=\"Enter email\"\r\n//               //{...renderErrorMessages(\"Email\")}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 type=\"password\"\r\n//                 className=\"form-control mt-1\"\r\n//                 placeholder=\"Enter password\"\r\n//               //{...renderErrorMessages(\"Password\")}\r\n//               />\r\n//             </div>\r\n//             <div className=\"d-grid gap-2 mt-3\">\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 <form onSubmit={handleSubmit}>Submit</form>\r\n//               </button>\r\n//             </div>\r\n//             {/* <p className=\"text-center mt-2\">\r\n//               Forgot <a href=\"#\">password?</a>\r\n//             </p> */}\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     )\r\n//   }\r\n//   return (\r\n//     <div className=\"Auth-form-container\">\r\n//       <form className=\"Auth-form\">\r\n//         <div className=\"Auth-form-content\">\r\n//           <h3 className=\"Auth-form-title\">Sign In</h3>\r\n//           <div className=\"text-center\">\r\n//             Already registered?{\" \"}\r\n//             <span className=\"link-primary\" onClick={changeAuthMode}>\r\n//               Sign In\r\n//             </span>\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Name</label>\r\n//             <input\r\n//               type=\"name\"\r\n//               className=\"form-control mt-1\"\r\n//               placeholder=\"Full Name\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"form-control mt-1\"\r\n//               placeholder=\"Email Address\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"form-control mt-1\"\r\n//               placeholder=\"Password\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"d-grid gap-2 mt-3\">\r\n//             <button type=\"submit\" className=\"btn btn-primary\">\r\n//               <form onSubmit={handleSubmit}>Submit</form>\r\n//             </button>\r\n//           </div>\r\n//           {/* <p className=\"text-center mt-2\">\r\n//             Forgot <a href=\"#\">password?</a>\r\n//           </p> */}\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction App() {\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // User Login info\r\n  const database = [\r\n    {\r\n      username: \"user1\",\r\n      password: \"pass1\"\r\n    },\r\n    {\r\n      username: \"user2\",\r\n      password: \"pass2\"\r\n    }\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\"\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    var { uname, pass } = document.forms[0];\r\n\r\n    // Find user login info\r\n    const userData = database.find((user) => user.username === uname.value);\r\n\r\n    // Compare user info\r\n    if (userData) {\r\n      if (userData.password !== pass.value) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsSubmitted(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\" span=\"12\">Sign In</div>\r\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C,CAHa,CAKb;;EACA,MAAMO,QAAQ,GAAG,CACf;IACEC,QAAQ,EAAE,OADZ;IAEEC,QAAQ,EAAE;EAFZ,CADe,EAKf;IACED,QAAQ,EAAE,OADZ;IAEEC,QAAQ,EAAE;EAFZ,CALe,CAAjB;EAWA,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,kBADM;IAEbC,IAAI,EAAE;EAFO,CAAf;;EAKA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9B;IACAA,KAAK,CAACC,cAAN;IAEA,IAAI;MAAEJ,KAAF;MAASC;IAAT,IAAkBI,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAtB,CAJ8B,CAM9B;;IACA,MAAMC,QAAQ,GAAGX,QAAQ,CAACY,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACZ,QAAL,KAAkBG,KAAK,CAACU,KAAhD,CAAjB,CAP8B,CAS9B;;IACA,IAAIH,QAAJ,EAAc;MACZ,IAAIA,QAAQ,CAACT,QAAT,KAAsBG,IAAI,CAACS,KAA/B,EAAsC;QACpC;QACAjB,gBAAgB,CAAC;UAAEkB,IAAI,EAAE,MAAR;UAAgBC,OAAO,EAAEb,MAAM,CAACE;QAAhC,CAAD,CAAhB;MACD,CAHD,MAGO;QACLN,cAAc,CAAC,IAAD,CAAd;MACD;IACF,CAPD,MAOO;MACL;MACAF,gBAAgB,CAAC;QAAEkB,IAAI,EAAE,OAAR;QAAiBC,OAAO,EAAEb,MAAM,CAACC;MAAjC,CAAD,CAAhB;IACD;EACF,CArBD,CAtBa,CA6Cb;;;EACA,MAAMa,kBAAkB,GAAIF,IAAD,IACzBA,IAAI,KAAKnB,aAAa,CAACmB,IAAvB,iBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UAAwBnB,aAAa,CAACoB;EAAtC;IAAA;IAAA;IAAA;EAAA,QAFJ,CA9Ca,CAmDb;;;EACA,MAAME,UAAU,gBACd;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAM,QAAQ,EAAEZ,YAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,OAAxB;UAAgC,QAAQ;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGW,kBAAkB,CAAC,OAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,MAA5B;UAAmC,QAAQ;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGA,kBAAkB,CAAC,MAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAWE;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;;EAoBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAuB,IAAI,EAAC,IAA5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGnB,WAAW,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH,GAA+CoB,UAF7D;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAhFQvB,G;;KAAAA,G;AAkFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}